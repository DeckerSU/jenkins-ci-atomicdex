# Dockerfile with build environment for mm2 Android (c) Decker, 2022
FROM ubuntu:xenial-20151218.1

# Build:
# docker build -f ~/bin/Dockerfile.android.ci --build-arg BUILDER_NAME=$USER --build-arg BUILDER_UID=$(id -u) --build-arg BUILDER_GID=$(id -g) -t mm2_android_builder .

# Interactive exec. for tests:
# docker run -u $(id -u ${USER}):$(id -g ${USER}) -v /home/$USER/.cargo/git:/root/.cargo/git -v /home/$USER/.cargo/registry:/root/.cargo/registry -v $PWD:$PWD -w $PWD -e HOME=/root -it mm2_android_builder

# For build mm2 Android launch the following:
# CC_armv7_linux_androideabi=armv7a-linux-androideabi21-clang CARGO_TARGET_ARMV7_LINUX_ANDROIDEABI_LINKER=armv7a-linux-androideabi21-clang cargo rustc --target=armv7-linux-androideabi --lib --profile ci --crate-type=staticlib --package mm2_bin_lib
# CC_aarch64_linux_android=aarch64-linux-android21-clang CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=aarch64-linux-android21-clang cargo rustc --target=aarch64-linux-android --lib --profile ci --crate-type=staticlib --package mm2_bin_lib

ARG DEBIAN_FRONTEND=noninteractive
ARG BUILDER_NAME=builder
ARG BUILDER_UID=1000
ARG BUILDER_GID=1000
ENV TZ=Europe/Amsterdam

# https://superuser.com/questions/321240/how-do-you-redirect-wget-response-to-standard-out

RUN \
    sed -i 's/archive\.ubuntu\.com/nl\.archive\.ubuntu\.com/g' /etc/apt/sources.list &&\
    apt-get update &&\
    apt-get install -y wget curl unzip python sudo &&\
    apt-get install -y cmake gcc g++ &&\
    groupadd --gid ${BUILDER_GID} --force ${BUILDER_NAME} &&\
    adduser --disabled-password --gecos '' --no-create-home $BUILDER_NAME --uid ${BUILDER_UID} --gid ${BUILDER_GID} &&\
    adduser $BUILDER_NAME sudo &&\
    echo "$BUILDER_NAME ALL=(ALL:ALL) NOPASSWD: ALL" | tee -a /etc/sudoers.d/$BUILDER_NAME &&\
    wget -O- https://sh.rustup.rs > /tmp/rustup-init.sh &&\
    sh /tmp/rustup-init.sh -y --default-toolchain none &&\
    . /root/.cargo/env &&\
    rustup set profile minimal &&\
    rustup install nightly-2022-10-29 &&\
    rustup default nightly-2022-10-29 &&\
    rustup component add rustfmt-preview &&\
    rustup target add armv7-linux-androideabi &&\
    rustup target add aarch64-linux-android &&\
    rm -f /tmp/rustup-init.sh &&\
    curl -o /tmp/ndk.zip https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip &&\
    unzip -q /tmp/ndk.zip -d /tmp &&\
    /tmp/android-ndk-r21b/build/tools/make_standalone_toolchain.py --force --install-dir /root/android-ndk --arch arm --api 21 &&\
    /tmp/android-ndk-r21b/build/tools/make_standalone_toolchain.py --force --install-dir /root/android-ndk --arch arm64 --api 21 &&\
    rm /tmp/ndk.zip &&\
    chmod -R 777 /root

# $NDK/toolchains/llvm/prebuilt/linux-x86_64/bin

ENV PATH="/root/android-ndk/bin:/root/.cargo/bin:${PATH}"
ENV JEMALLOC_SYS_WITH_MALLOC_CONF="background_thread:true,narenas:1,tcache:false,dirty_decay_ms:0,muzzy_decay_ms:0,metadata_thp:auto"


    